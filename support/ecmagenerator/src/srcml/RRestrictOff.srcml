<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./snap" filename="RRestrictOff.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RRESTRICTOFF_H</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RRESTRICTOFF_H</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RSnapRestriction.h"</cpp:file></cpp:include>
  <class_decl>class 
  <name>RDocumentInterface</name>;</class_decl>
  <comment type="block">/** * \brief Default snap restriction
  implementation (no restriction). * * \scriptable * * \ingroup
  snap */</comment>
  <class>class 
  <name>RRestrictOff</name>
  <super>: 
  <specifier>public</specifier>
  <name>RSnapRestriction</name></super>
  <block>{
  <private type="default"></private>
  <public>public: 
  <constructor>
    <name>RRestrictOff</name>
    <parameter_list>(
    <param>
      <decl>
        <type>
        <name>RDocumentInterface</name>&amp;</type>
        <name>documentInterface</name>
      </decl>
    </param>)</parameter_list>
    <member_list>: 
    <call>
      <name>RSnapRestriction</name>
      <argument_list>(
      <argument>
        <expr>
          <name>documentInterface</name>
        </expr>
      </argument>)</argument_list>
    </call></member_list>
    <block>{}</block>
  </constructor>
  <destructor>
    <specifier>virtual</specifier>
    <name>~RRestrictOff</name>
    <parameter_list>()</parameter_list>
    <block>{}</block>
  </destructor>
  <function_decl>
  <type>
    <name>virtual</name>
    <name>RVector</name>
  </type>
  <name>restrictSnap</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>RVector</name>&amp;</type>
      <name>position</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>RVector</name>&amp;</type>
      <name>relativeZero</name>
    </decl>
  </param>)</parameter_list>;</function_decl></public>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RRestrictOff*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
