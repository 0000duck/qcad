<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./core" filename="RThread.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RTHREAD_H_</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RTHREAD_H_</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QMetaType&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QThread&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RRunner.h"</cpp:file></cpp:include>
  <comment type="block">/** * \scriptable * _generateScriptShell
  */</comment>
  <class>class 
  <name>RThread</name>
  <super>: 
  <specifier>public</specifier>
  <name>QThread</name></super>
  <block>{
  <private type="default">
    <macro>
      <name>Q_OBJECT</name>
    </macro>
  </private>
  <public>public: 
  <constructor_decl>
  <name>RThread</name>
  <parameter_list>(
  <param>
    <decl>
    <type>
    <name>QObject</name>*</type>
    <name>parent</name>=
    <init>
      <expr>0</expr>
    </init></decl>
  </param>)</parameter_list>;</constructor_decl>
  <destructor_decl>
  <specifier>virtual</specifier>
  <name>~RThread</name>
  <parameter_list>()</parameter_list>;</destructor_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>start</name>
  <parameter_list>()</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>static</name>
    <name>void</name>
  </type>
  <name>yieldCurrentThread</name>
  <parameter_list>()</parameter_list>;</function_decl>
  <label>
  <name>signals</name>:</label>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>dorun</name>
  <parameter_list>()</parameter_list>;</function_decl></public>
  <protected>protected: 
  <function_decl>
  <type>
    <name>virtual</name>
    <name>void</name>
  </type>
  <name>run</name>
  <parameter_list>
  ()</parameter_list>;</function_decl></protected>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RThread*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
  <comment type="block">/* RTHREAD_H_ */</comment>
</unit>
