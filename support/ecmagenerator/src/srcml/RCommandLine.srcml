<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./gui" filename="RCommandLine.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RCOMMANDLINE_H_</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RCOMMANDLINE_H_</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QEvent&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QLineEdit&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QMetaType&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QStringList&gt;</cpp:file></cpp:include>
  <comment type="block">/** * \scriptable */</comment>
  <class>class 
  <name>RCommandLine</name>
  <super>: 
  <specifier>public</specifier>
  <name>QLineEdit</name></super>
  <block>{
  <private type="default">
  <decl_stmt>
    <decl>
      <type>
        <name>Q_OBJECT</name>
      </type>
      <name>signals</name>
    </decl>
  </decl_stmt>: 
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>clearHistory</name>
  <parameter_list>()</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>commandConfirmed</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>QString</name>&amp;</type>
      <name>command</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>completeCommand</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>QString</name>&amp;</type>
      <name>command</name>
    </decl>
  </param>)</parameter_list>;</function_decl></private>
  <public>public: 
  <constructor_decl>
  <name>RCommandLine</name>
  <parameter_list>(
  <param>
    <decl>
    <type>
    <name>QWidget</name>*</type>
    <name>parent</name>=
    <init>
      <expr>0</expr>
    </init></decl>
  </param>)</parameter_list>;</constructor_decl>
  <function_decl>
  <type>
    <name>QString</name>
  </type>
  <name>getLastCommand</name>
  <parameter_list>()</parameter_list>;</function_decl></public>
  <protected>protected: 
  <function_decl>
  <type>
    <name>virtual</name>
    <name>void</name>
  </type>
  <name>keyPressEvent</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>QKeyEvent</name>*</type>
      <name>event</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>virtual</name>
    <name>bool</name>
  </type>
  <name>event</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>QEvent</name>*</type>
      <name>event</name>
    </decl>
  </param>)</parameter_list>;</function_decl></protected>
  <private>private: 
  <decl_stmt>
  <decl>
    <type>
      <name>QStringList</name>
    </type>
    <name>history</name>
  </decl>;</decl_stmt>
  <decl_stmt>
  <decl>
    <type>
      <name>
      <name>QStringList</name>::
      <name>iterator</name></name>
    </type>
    <name>it</name>
  </decl>;</decl_stmt></private>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RCommandLine*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
