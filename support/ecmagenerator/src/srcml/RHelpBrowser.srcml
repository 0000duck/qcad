<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./gui" filename="RHelpBrowser.h">
  <comment type="block">/** * Copyright (c) 2011-2013 by Andrew
  Mustun. All rights reserved. * * This file is part of the QCAD
  project. * * QCAD is free software: you can redistribute it
  and/or modify * it under the terms of the GNU General Public
  License as published by * the Free Software Foundation, either
  version 3 of the License, or * (at your option) any later
  version. * * QCAD is distributed in the hope that it will be
  useful, * but WITHOUT ANY WARRANTY; without even the implied
  warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE. See the * GNU General Public License for more details. *
  * You should have received a copy of the GNU General Public
  License * along with QCAD. */</comment>
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RHELPBROWSER_H</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RHELPBROWSER_H</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QObject&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QProcess&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QString&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RSingleton.h"</cpp:file></cpp:include>
  <comment type="block">/** * \ingroup gui_qt * * \scriptable
  */</comment>
  <class>class 
  <name>RHelpBrowser</name>
  <super>: 
  <specifier>public</specifier>
  <name>QObject</name>, 
  <specifier>public</specifier>
  <name>RSingleton</name></super>
  <block>{
  <private type="default">
    <decl_stmt>
    <decl>
      <type>
      <name>Q_OBJECT</name>
      <name>friend</name>class</type>
      <name>RSingleton</name>
    </decl>;</decl_stmt>
  </private>
  <public>public: 
  <constructor_decl>
  <name>RHelpBrowser</name>
  <parameter_list>()</parameter_list>;</constructor_decl>
  <destructor_decl>
  <name>~RHelpBrowser</name>
  <parameter_list>()</parameter_list>;</destructor_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>showDocumentation</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>QString</name>&amp;</type>
      <name>file</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
  <name>static</name>
  <name>RHelpBrowser</name>&amp;</type>
  <name>getInstance</name>
  <parameter_list>()</parameter_list>;</function_decl></public>
  <public>public slots: 
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>error</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
        <name>
        <name>QProcess</name>::
        <name>ProcessError</name></name>
      </type>
      <name>e</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>readStandardOutput</name>
  <parameter_list>()</parameter_list>;</function_decl>
  <function_decl>
  <type>
    <name>void</name>
  </type>
  <name>readStandardError</name>
  <parameter_list>()</parameter_list>;</function_decl></public>
  <private>private: 
  <function_decl>
  <type>
    <name>bool</name>
  </type>
  <name>startAssistant</name>
  <parameter_list>()</parameter_list>;</function_decl>
  <decl_stmt>
  <decl>
    <type>
    <name>QProcess</name>*</type>
    <name>proc</name>
  </decl>;</decl_stmt></private>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RHelpBrowser*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
