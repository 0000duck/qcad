<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./core" filename="RClipboardListener.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RCLIPBOARDLISTENER_H</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RCLIPBOARDLISTENER_H</name></cpp:define>
  <class_decl>class 
  <name>RDocument</name>;</class_decl>
  <comment type="block">/** * \brief Abstract base class for
  classes that are interested in the current * clipboard contents
  and want to be notified whenever the clipboard changes. * *
  \ingroup core */</comment>
  <class>class 
  <name>RClipboardListener</name>
  <block>{
  <private type="default"></private>
  <public>public: 
  <destructor>
    <specifier>virtual</specifier>
    <name>~RClipboardListener</name>
    <parameter_list>()</parameter_list>
    <block>{}</block>
  </destructor>
  <comment type="block">/** * Called by the document whenever the
  current clipboard changes. */</comment>
  <function_decl>
  <type>
    <name>virtual</name>
    <name>void</name>
  </type>
  <name>updateClipboardListener</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>RDocument</name>*</type>
      <name>document</name>
    </decl>
  </param>)</parameter_list>
  <specifier>=
  0</specifier>;</function_decl></public>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RClipboardListener*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
