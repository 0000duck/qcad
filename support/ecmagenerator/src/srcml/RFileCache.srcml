<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./core" filename="RFileCache.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RFILECACHE_H_</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RFILECACHE_H_</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QMetaType&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QBuffer&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QCache&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QMap&gt;</cpp:file></cpp:include>
  <comment type="block">/** * QBuffer based file cache. * *
  \ingroup core * \scriptable */</comment>
  <class>class 
  <name>RFileCache</name>
  <block>{
  <private type="default"></private>
  <public>public: 
  <function_decl>
  <type>
    <name>static</name>
    <name>QString</name>
  </type>
  <name>getContents</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>QString</name>&amp;</type>
      <name>fileName</name>
    </decl>
  </param>, 
  <param>
    <decl>
    <type>
      <name>bool</name>
    </type>
    <name>forceReload</name>=
    <init>
      <expr>
        <name>false</name>
      </expr>
    </init></decl>
  </param>)</parameter_list>;</function_decl>
  <function_decl>
  <type>
  <name>static</name>
  <name>QBuffer</name>*</type>
  <name>getBuffer</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>QString</name>&amp;</type>
      <name>fileName</name>
    </decl>
  </param>, 
  <param>
    <decl>
    <type>
      <name>bool</name>
    </type>
    <name>forceReload</name>=
    <init>
      <expr>
        <name>false</name>
      </expr>
    </init></decl>
  </param>)</parameter_list>;</function_decl></public>
  <private>private: 
  <decl_stmt>
  <decl>
    <type>
      <name>static</name>
      <name>QCache
      <argument_list>&lt;
      <argument>
        <name>QString</name>
      </argument>, 
      <argument>
        <name>QBuffer</name>
      </argument>&gt;</argument_list></name>
    </type>
    <name>cache</name>
  </decl>;</decl_stmt></private>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RFileCache</argument>)</argument_list>
  </macro>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RFileCache*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
