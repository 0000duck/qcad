<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./core" filename="RPatternList.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RPATTERNLIST_H</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RPATTERNLIST_H</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QString&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QMap&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QPair&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RPattern.h"</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RResourceList.h"</cpp:file></cpp:include>
  <comment type="block">/** * Base class for global lists of hatch
  patterns. * * \ingroup core * \scriptable */</comment>
  <class>class 
  <name>RPatternList</name>
  <block>{
  <private type="default"></private>
  <public>public: 
  <function_decl>
  <type>
    <name>static</name>
    <name>void</name>
  </type>
  <name>init</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
        <name>bool</name>
      </type>
      <name>metric</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>RResourceList
      <argument_list>&lt;
      <argument>
        <name>RPattern</name>
      </argument>&gt;</argument_list></name>&amp;</type>
      <name>res</name>
    </decl>
  </param>)</parameter_list>;</function_decl></public>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RPatternList</argument>)</argument_list>
  </macro>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RPatternList*</argument>)</argument_list>
  </macro>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>
    RResourceList&lt;RPattern&gt;*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
