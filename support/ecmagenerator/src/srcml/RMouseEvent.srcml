<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./core" filename="RMouseEvent.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RMOUSEEVENT_H</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RMOUSEEVENT_H</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QMouseEvent&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RVector.h"</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RInputEvent.h"</cpp:file></cpp:include>
  <class_decl>class 
  <name>RGraphicsScene</name>;</class_decl>
  <class_decl>class 
  <name>RGraphicsView</name>;</class_decl>
  <comment type="block">/** * \brief A mouse event for a \ref
  RGraphicsScene "graphics scene". * * The coordinates in a mouse
  event are available as scene coordinates * of screen coordinates
  from the view the event originated. * * \ingroup core *
  \scriptable */</comment>
  <class>class 
  <name>RMouseEvent</name>
  <super>: 
  <specifier>public</specifier>
  <name>QMouseEvent</name>, 
  <specifier>public</specifier>
  <name>RInputEvent</name></super>
  <block>{
  <private type="default"></private>
  <public>public: 
  <constructor_decl>
  <name>RMouseEvent</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
        <name>
        <name>QEvent</name>::
        <name>Type</name></name>
      </type>
      <name>type</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>RVector</name>&amp;</type>
      <name>position</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
        <name>
        <name>Qt</name>::
        <name>MouseButton</name></name>
      </type>
      <name>button</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
        <name>
        <name>Qt</name>::
        <name>MouseButtons</name></name>
      </type>
      <name>buttons</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
        <name>
        <name>Qt</name>::
        <name>KeyboardModifiers</name></name>
      </type>
      <name>modifiers</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>RGraphicsScene</name>&amp;</type>
      <name>s</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>RGraphicsView</name>&amp;</type>
      <name>v</name>
    </decl>
  </param>)</parameter_list>;</constructor_decl>
  <constructor_decl>
  <name>RMouseEvent</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>QMouseEvent</name>&amp;</type>
      <name>mouseEvent</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>RGraphicsScene</name>&amp;</type>
      <name>s</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>RGraphicsView</name>&amp;</type>
      <name>v</name>
    </decl>
  </param>)</parameter_list>;</constructor_decl>
  <destructor_decl>
  <specifier>virtual</specifier>
  <name>~RMouseEvent</name>
  <parameter_list>
  ()</parameter_list>;</destructor_decl></public>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RMouseEvent*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
