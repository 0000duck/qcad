<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./snap" filename="RSnapPerpendicular.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RSNAPPERPENDICULAR_H</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RSNAPPERPENDICULAR_H</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RSnapEntityBase.h"</cpp:file></cpp:include>
  <class_decl>class 
  <name>RMouseEvent</name>;</class_decl>
  <comment type="block">/** * \brief On entity snapper
  implementation. * * \scriptable * * \ingroup snap */</comment>
  <class>class 
  <name>RSnapPerpendicular</name>
  <super>: 
  <specifier>public</specifier>
  <name>RSnapEntityBase</name></super>
  <block>{
  <private type="default"></private>
  <public>public: 
  <destructor>
    <specifier>virtual</specifier>
    <name>~RSnapPerpendicular</name>
    <parameter_list>()</parameter_list>
    <block>{}</block>
  </destructor></public>
  <protected>protected: 
  <function_decl>
  <type>
    <name>virtual</name>
    <name>QList
    <argument_list>&lt;
    <argument>
      <name>RVector</name>
    </argument>&gt;</argument_list></name>
  </type>
  <name>snapEntity</name>
  <parameter_list>( 
  <param>
    <decl>
      <type>
        <name>QSharedPointer
        <argument_list>&lt;
        <argument>
          <name>REntity</name>
        </argument>&gt;</argument_list></name>
      </type>
      <name>entity</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>RVector</name>&amp;</type>
      <name>point</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>RBox</name>&amp;</type>
      <name>queryBox</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>RGraphicsView</name>&amp;</type>
      <name>view</name>
    </decl>
  </param>)</parameter_list>;</function_decl></protected>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RSnapPerpendicular*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
