<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./io/dxf" filename="RDxfImporterFactory.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RDXFIMPORTERFACTORY_H_</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RDXFIMPORTERFACTORY_H_</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QFileInfo&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QMetaType&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RDocument.h"</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RDxfImporter.h"</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RFileImporter.h"</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RFileImporterFactory.h"</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RFileImporterRegistry.h"</cpp:file></cpp:include>
  <comment type="block">/** * \scriptable */</comment>
  <class>class 
  <name>RDxfImporterFactory</name>
  <super>: 
  <specifier>public</specifier>
  <name>RFileImporterFactory</name></super>
  <block>{
  <private type="default"></private>
  <public>public: 
  <function>
    <type>
      <name>static</name>
      <name>void</name>
    </type>
    <name>registerFileImporter</name>
    <parameter_list>()</parameter_list>
    <block>{ 
    <expr_stmt>
    <expr>
      <call>
        <name>
        <name>RFileImporterRegistry</name>::
        <name>registerFileImporter</name></name>
        <argument_list>( 
        <argument>
          <expr>new 
          <call>
            <name>RDxfImporterFactory</name>
            <argument_list>()</argument_list>
          </call></expr>
        </argument>)</argument_list>
      </call>
    </expr>;</expr_stmt>}</block>
  </function>
  <function_decl>
  <type>
    <name>virtual</name>
    <name>QStringList</name>
  </type>
  <name>getFilterStrings</name>
  <parameter_list>()</parameter_list>;</function_decl>
  <function>
    <type>
    <name>virtual</name>
    <name>RFileImporter</name>*</type>
    <name>instantiate</name>
    <parameter_list>(
    <param>
      <decl>
        <type>
        <name>RDocument</name>&amp;</type>
        <name>document</name>
      </decl>
    </param>, 
    <param>
      <decl>
      <type>
      <name>RMessageHandler</name>*</type>
      <name>messageHandler</name>=
      <init>
        <expr>
          <name>NULL</name>
        </expr>
      </init></decl>
    </param>, 
    <param>
      <decl>
      <type>
      <name>RProgressHandler</name>*</type>
      <name>progressHandler</name>=
      <init>
        <expr>
          <name>NULL</name>
        </expr>
      </init></decl>
    </param>)</parameter_list>
    <block>{ 
    <return>return 
    <expr>new 
    <call>
      <name>RDxfImporter</name>
      <argument_list>(
      <argument>
        <expr>
          <name>document</name>
        </expr>
      </argument>, 
      <argument>
        <expr>
          <name>messageHandler</name>
        </expr>
      </argument>, 
      <argument>
        <expr>
          <name>progressHandler</name>
        </expr>
      </argument>)</argument_list>
    </call></expr>;</return>}</block>
  </function>
  <function_decl>
  <type>
    <name>virtual</name>
    <name>bool</name>
  </type>
  <name>canImport</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>QString</name>&amp;</type>
      <name>fileName</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>const</name>
      <name>QString</name>&amp;</type>
      <name>nameFilter</name>
    </decl>
  </param>)</parameter_list>;</function_decl></public>}</block>;</class>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RDxfImporterFactory*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
