<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src"
xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++"
dir="./core" filename="RPropertyChange.h">
  <cpp:ifndef>#
  <cpp:directive>ifndef</cpp:directive>
  <name>RPROPERTYCHANGE_H</name></cpp:ifndef>
  <cpp:define>#
  <cpp:directive>define</cpp:directive>
  <name>RPROPERTYCHANGE_H</name></cpp:define>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>&lt;QVariant&gt;</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RObject.h"</cpp:file></cpp:include>
  <cpp:include>#
  <cpp:directive>include</cpp:directive>
  <cpp:file>"RPropertyTypeId.h"</cpp:file></cpp:include>
  <class_decl>class 
  <name>RStorage</name>;</class_decl>
  <class_decl>class 
  <name>RExporter</name>;</class_decl>
  <comment type="block">/** * Stores the change that was made to a
  property of an object. */</comment>
  <class>class 
  <name>RPropertyChange</name>
  <block>{
  <private type="default"></private>
  <public>public: 
  <constructor_decl>
  <name>RPropertyChange</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
        <name>RPropertyTypeId</name>
      </type>
      <name>propertyTypeId</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
        <name>QVariant</name>
      </type>
      <name>oldValue</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
        <name>QVariant</name>
      </type>
      <name>newValue</name>
    </decl>
  </param>)</parameter_list>;</constructor_decl>
  <decl_stmt>
  <decl>
    <type>
      <name>RPropertyTypeId</name>
    </type>
    <name>propertyTypeId</name>
  </decl>;</decl_stmt>
  <decl_stmt>
  <decl>
    <type>
      <name>QVariant</name>
    </type>
    <name>oldValue</name>
  </decl>;</decl_stmt>
  <decl_stmt>
  <decl>
    <type>
      <name>QVariant</name>
    </type>
    <name>newValue</name>
  </decl>;</decl_stmt></public>}</block>;</class>
  <function_decl>
  <type>
    <name>QDebug</name>
  </type>
  <name>operator&lt;&lt;</name>
  <parameter_list>(
  <param>
    <decl>
      <type>
        <name>QDebug</name>
      </type>
      <name>dbg</name>
    </decl>
  </param>, 
  <param>
    <decl>
      <type>
      <name>RPropertyChange</name>&amp;</type>
      <name>p</name>
    </decl>
  </param>)</parameter_list>;</function_decl>
  <typedef>typedef 
  <type>
    <name>QMap
    <argument_list>&lt;
    <argument>
      <name>int</name>
    </argument>, 
    <argument>
      <name>QList
      <argument_list>&lt;
      <argument>
        <name>RPropertyChange</name>
      </argument>&gt;</argument_list></name>
    </argument>&gt;</argument_list></name>
  </type>
  <name>_RMapIntPropertyChange</name>;</typedef>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>_RMapIntPropertyChange*</argument>)</argument_list>
  </macro>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>_RMapIntPropertyChange</argument>)</argument_list>
  </macro>
  <macro>
    <name>Q_DECLARE_METATYPE</name>
    <argument_list>(
    <argument>RPropertyChange*</argument>)</argument_list>
  </macro>
  <cpp:endif>#
  <cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
