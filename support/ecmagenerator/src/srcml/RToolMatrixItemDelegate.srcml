<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" dir="./gui" filename="RToolMatrixItemDelegate.h"><comment type="block">/**
 * Copyright (c) 2011-2016 by Andrew Mustun. All rights reserved.
 * 
 * This file is part of the QCAD project.
 *
 * QCAD is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QCAD is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with QCAD.
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>RTOOLMATRIXITEMDELEGATE_H_</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <name>RTOOLMATRIXITEMDELEGATE_H_</name></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gui_global.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QWidget&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QTreeWidget&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QTreeWidgetItem&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;QtDebug&gt;</cpp:file></cpp:include>

<comment type="block">/**
 * Tree widget item delegate. Decorates root items of QTreeWidget tool matrices.
 *
 * \ingroup gui
 * \scriptable
 * \generateScriptShell
 */</comment>
<class>class <macro><name>QCADGUI_EXPORT</name></macro> <name>RToolMatrixItemDelegate</name><super>: <specifier>public</specifier> <name>QItemDelegate</name></super> <block>{<private type="default">
    <macro><name>Q_OBJECT</name></macro>
</private><public>public:
    <constructor_decl><name>RToolMatrixItemDelegate</name><parameter_list>(<param><decl><type><name>QTreeView</name>*</type> <name>view</name></decl></param>, <param><decl><type><name>QWidget</name>*</type> <name>parent</name></decl></param>)</parameter_list>;</constructor_decl>

    <function_decl><type><name>void</name></type> <name>paint</name><parameter_list>(<param><decl><type><name>QPainter</name>*</type> <name>painter</name></decl></param>, <param><decl><type><name>const</name> <name>QStyleOptionViewItem</name>&amp;</type> <name>option</name></decl></param>, <param><decl><type><name>const</name> <name>QModelIndex</name>&amp;</type> <name>index</name></decl></param>)</parameter_list> <specifier>const</specifier>;</function_decl>
    <function_decl><type><name>QSize</name></type> <name>sizeHint</name><parameter_list>(<param><decl><type><name>const</name> <name>QStyleOptionViewItem</name>&amp;</type> <name>opt</name></decl></param>, <param><decl><type><name>const</name> <name>QModelIndex</name>&amp;</type> <name>index</name></decl></param>)</parameter_list> <specifier>const</specifier>;</function_decl>

</public><private>private:
    <decl_stmt><decl><type><name>QTreeView</name>*</type> <name>treeView</name></decl>;</decl_stmt>
</private>}</block>;</class>
</unit>
