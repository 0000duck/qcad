<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class_decl name="RDocument" />
  <class_decl name="RExporter" />
  <class name="RSplineEntity"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="false"
  hasShell="false" sharedPointerSupport="false" isQObject="false"
  hasStreamOperator="false" isAbstract="false" isScriptable="true">
    <baseClass name="REntity" specifier="public" />
    <constructor>
      <variant>
        <arg type="RDocument *" typeName="RDocument *"
        name="document" isConst="false" />
        <arg type="RSplineData &amp;" typeName="RSplineData"
        name="data" isConst="true" />
        <arg type="RObject::Id" typeName="RObject::Id"
        name="objectId" hasDefault="true"
        default="RObject :: INVALID_ID" isConst="false" />
      </variant>
    </constructor>
    <method name="init" cppName="init" specifier="public"
    isStatic="true" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="clone" cppName="clone" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="RSplineEntity *"
      isPureVirtual="false" />
    </method>
    <method name="getType" cppName="getType" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="RS::EntityType" isPureVirtual="false" />
    </method>
    <method name="setProperty" cppName="setProperty"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RPropertyTypeId" typeName="RPropertyTypeId"
        name="propertyTypeId" isConst="false" />
        <arg type="QVariant &amp;" typeName="QVariant" name="value"
        isConst="true" />
      </variant>
    </method>
    <method name="getProperty" cppName="getProperty"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QPair &lt; QVariant , RPropertyAttributes &gt;"
      isPureVirtual="false">
        <arg type="RPropertyTypeId" typeName="RPropertyTypeId"
        name="propertyTypeId" isConst="false" />
        <arg type="bool" typeName="bool" name="humanReadable"
        hasDefault="true" default=" false" isConst="false" />
        <arg type="bool" typeName="bool" name="noAttributes"
        hasDefault="true" default=" false" isConst="false" />
      </variant>
    </method>
    <method name="exportEntity" cppName="exportEntity"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RExporter &amp;" typeName="RExporter" name="e"
        isConst="false" />
        <arg type="bool" typeName="bool" name="preview"
        hasDefault="true" default=" false" isConst="false" />
      </variant>
    </method>
    <method name="setUndone" cppName="setUndone" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="getData" cppName="getData" specifier="public"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="RSplineData &amp;"
      isPureVirtual="false" />
      <variant returnType="RSplineData &amp;"
      isPureVirtual="false" />
    </method>
    <method name="isValid" cppName="isValid" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="getDegree" cppName="getDegree" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="getDirection1" cppName="getDirection1"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="getDirection2" cppName="getDirection2"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="getTangentAtStart" cppName="getTangentAtStart"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RVector" isPureVirtual="false" />
    </method>
    <method name="getTangentAtEnd" cppName="getTangentAtEnd"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RVector" isPureVirtual="false" />
    </method>
    <method name="isClosed" cppName="isClosed" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="isPeriodic" cppName="isPeriodic"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="appendControlPoint" cppName="appendControlPoint"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="RVector &amp;" typeName="RVector" name="point"
        isConst="true" />
      </variant>
    </method>
    <method name="setPeriodic" cppName="setPeriodic"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="bool" typeName="bool" name="on"
        isConst="false" />
      </variant>
    </method>
    <method name="getControlPoints" cppName="getControlPoints"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; RVector &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getControlPointsWrapped"
    cppName="getControlPointsWrapped" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="QList &lt; RVector &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getFitPoints" cppName="getFitPoints"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; RVector &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getKnotVector" cppName="getKnotVector"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; double &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getWeights" cppName="getWeights"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; double &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getLength" cppName="getLength" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="getStartPoint" cppName="getStartPoint"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RVector" isPureVirtual="false" />
    </method>
    <method name="getEndPoint" cppName="getEndPoint"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="RVector" isPureVirtual="false" />
    </method>
    <method name="reverse" cppName="reverse" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="getComplexity" cppName="getComplexity"
    specifier="public" isStatic="false" isVirtual="true"
    isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false" />
    </method>
    <method name="getExploded" cppName="getExploded"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; QSharedPointer &lt; RShape &gt; &gt;"
      isPureVirtual="false">
        <arg type="int" typeName="int" name="segments"
        hasDefault="true" default="RDEFAULT_MIN1"
        isConst="false" />
      </variant>
    </method>
    <method name="print" cppName="print" specifier="protected"
    isStatic="false" isVirtual="true" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QDebug" typeName="QDebug" name="dbg"
        isConst="false" />
      </variant>
    </method>
    <property name="PropertyCustom" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyHandle" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyType" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyBlock" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyLayer" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyLinetype" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyLineweight" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyColor" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyDrawOrder" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyControlPointNX" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyControlPointNY" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyControlPointNZ" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyFitPointNX" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyFitPointNY" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyFitPointNZ" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyKnotN" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyPeriodic" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
    <property name="PropertyDegree" type="RPropertyTypeId"
    isConst="false" isStatic="true" />
  </class>
</unit>
