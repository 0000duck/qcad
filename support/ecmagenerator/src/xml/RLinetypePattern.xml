<?xml version="1.0"?>
<unit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:rs="http://www.ribbonsoft.com">
  <class name="RLinetypePattern"
  xsi:noNamespaceSchemaLocation="../class.xsd" isCopyable="true"
  hasShell="false" sharedPointerSupport="false" isQObject="false"
  hasStreamOperator="true" isAbstract="false" isScriptable="true">
    <constructor>
      <variant>
        <arg type="bool" typeName="bool" name="metric"
        isConst="false" />
        <arg type="QString &amp;" typeName="QString" name="name"
        isConst="true" />
        <arg type="QString &amp;" typeName="QString"
        name="description" isConst="true" />
        <arg type="QList &lt; double &gt; &amp;"
        typeName="QList &lt; double &gt;" name="dashes"
        isConst="true" />
      </variant>
      <variant />
      <variant>
        <arg type="bool" typeName="bool" name="metric"
        isConst="false" />
        <arg type="QString &amp;" typeName="QString" name="name"
        isConst="true" />
        <arg type="QString &amp;" typeName="QString"
        name="description" isConst="true" />
      </variant>
      <variant>
        <arg type="RLinetypePattern &amp;"
        typeName="RLinetypePattern" name="other" isConst="true" />
      </variant>
    </constructor>
    <method name="set" cppName="set" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QList &lt; double &gt; &amp;"
        typeName="QList &lt; double &gt;" name="dashes"
        isConst="true" />
      </variant>
    </method>
    <method name="loadAllFrom" cppName="loadAllFrom"
    specifier="public" isStatic="true" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; QPair &lt; QString , RLinetypePattern * &gt; &gt;"
      isPureVirtual="false">
        <arg type="bool" typeName="bool" name="metric"
        isConst="false" />
        <arg type="QString &amp;" typeName="QString"
        name="fileName" isConst="true" />
      </variant>
    </method>
    <method name="isValid" cppName="isValid" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="getNumDashes" cppName="getNumDashes"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="int" isPureVirtual="false" />
    </method>
    <method name="getName" cppName="getName" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false" />
    </method>
    <method name="setName" cppName="setName" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="n"
        isConst="true" />
      </variant>
    </method>
    <method name="getDescription" cppName="getDescription"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false" />
    </method>
    <method name="setDescription" cppName="setDescription"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="QString &amp;" typeName="QString" name="d"
        isConst="true" />
      </variant>
    </method>
    <method name="getLabel" cppName="getLabel" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="QString" isPureVirtual="false" />
    </method>
    <method name="isMetric" cppName="isMetric" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="getPattern" cppName="getPattern"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; double &gt;"
      isPureVirtual="false" />
    </method>
    <method name="getPatternLength" cppName="getPatternLength"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="getDashLengthAt" cppName="getDashLengthAt"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false">
        <arg type="int" typeName="int" name="i" isConst="false" />
      </variant>
    </method>
    <method name="getShapeIndices" cppName="getShapeIndices"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; int &gt;"
      isPureVirtual="false" />
    </method>
    <method name="hasShapes" cppName="hasShapes" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="hasShapeAt" cppName="hasShapeAt"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="int" typeName="int" name="i" isConst="false" />
      </variant>
    </method>
    <method name="getShapeAt" cppName="getShapeAt"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="QList &lt; RPainterPath &gt;"
      isPureVirtual="false">
        <arg type="int" typeName="int" name="i" isConst="false" />
      </variant>
    </method>
    <method name="updateShapes" cppName="updateShapes"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="getLargestGap" cppName="getLargestGap"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false" />
    </method>
    <method name="hasDashAt" cppName="hasDashAt" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="double" typeName="double" name="pos"
        isConst="false" />
      </variant>
    </method>
    <method name="getDelta" cppName="getDelta" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false">
        <arg type="double" typeName="double" name="pos"
        isConst="false" />
      </variant>
    </method>
    <method name="getPatternOffset" cppName="getPatternOffset"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="double" isPureVirtual="false">
        <arg type="double" typeName="double" name="length"
        isConst="false" />
      </variant>
    </method>
    <method name="isSymmetrical" cppName="isSymmetrical"
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="int" typeName="int" name="i" isConst="false" />
      </variant>
    </method>
    <method name="scale" cppName="scale" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false">
        <arg type="double" typeName="double" name="factor"
        isConst="false" />
      </variant>
    </method>
    <method name="getScreenBasedLinetype"
    cppName="getScreenBasedLinetype" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="QVector &lt; qreal &gt;"
      isPureVirtual="false" />
    </method>
    <method name="operator=" cppName="operator=" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="RLinetypePattern &amp;"
      isPureVirtual="false">
        <arg type="RLinetypePattern &amp;"
        typeName="RLinetypePattern" name="other" isConst="true" />
      </variant>
    </method>
    <method name="operator==" cppName="operator=="
    specifier="public" isStatic="false" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false">
        <arg type="RLinetypePattern &amp;"
        typeName="RLinetypePattern" name="other" isConst="true" />
      </variant>
    </method>
    <method name="isLoaded" cppName="isLoaded" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="bool" isPureVirtual="false" />
    </method>
    <method name="load" cppName="load" specifier="public"
    isStatic="false" isVirtual="false" isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <method name="initNameMap" cppName="initNameMap"
    specifier="public" isStatic="true" isVirtual="false"
    isScriptOverwritable="true">
      <variant returnType="void" isPureVirtual="false" />
    </method>
    <property name="nameMap"
    type="QMap &lt; QString , QString &gt;" isConst="false"
    isStatic="true" />
  </class>
</unit>
